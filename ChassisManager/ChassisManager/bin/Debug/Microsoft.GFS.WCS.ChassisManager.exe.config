<?xml version="1.0"?>
<configuration>
  <system.web>
    <httpRuntime executionTimeout="120"/>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceThrottling maxConcurrentCalls="20" maxConcurrentSessions="20" maxConcurrentInstances="20"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <system.diagnostics>
    <trace useGlobalLock="false"/>
    <switches>      
      <!-- 
             0 - Disabled
             1 - Enabled
            -->
      <add name="TraceEnabled" value="1"/>
     <!--
       Allowed values for SourceSwitch:
              All -             Allows all events through. 
              Critical -        Allows only Critical events through. 
              Error -           Allows Critical and Error events through. 
              Information -     Allows Critical, Error, Warning, and Information events through. 
              Off -             Does not allow any events through. 
              Verbose -         Allows Critical, Error, Warning, Information, and Verbose events through. 
              Warning -         Allows Critical, Error, and Warning events through.
      -->
      <add name="TraceSourceSwitch" value="Warning"/>
    </switches>
  </system.diagnostics>
  <appSettings>
    <!-- 
             Warning! ! ! Incorrectly setting the population field
             can severly impact the performance of the chassis 
             management system.
             Ranges:
                24 = 24 Blades in the Chassis (default)
                48 = 48 Blades in the Chassis
            -->
    <add key="Population" value="24"/>
    <!-- 
             Bmc authentication user name.  Incorrectly setting the bmc login 
             will result in 0xD5 completion codes.  Logon retry attempts are
             determined by the "BmcLogOnRetries" paramater
            -->
    <add key="BmcUserName" value="admin"/>
    <!-- 
             Bmc authentication user password.  Incorrectly setting the bmc password 
             will result in 0xD4 completion codes.  Logon retry attempts are
             determined by the "BmcLogOnRetries" paramater.  
            -->
    <add key="BmcUserKey" value="admin"/>
    <!-- 
             Bmc session time-out paramater.  The number is in 30 second intervals:
             A value of 1 = 30 seconds, 2 = 1 minute, 4 = two minutes... etc 
            -->
    <add key="BmcSessionTime" value="6"/>
    <!-- 
             Serial Timeout in ms
     -->
    <add key="SerialTimeout" value="100"/>
    <!-- 
             The number of consecutive gpio read errors before the master chip is reset
     -->
    <add key="GpioErrorLimit" value="3"/>
    <!-- 
             Number of fans in chassis.
            -->
    <add key="NumFans" value="6"/>
    <!-- 
             Number of PSUs in chassis.
            -->
    <add key="NumPsus" value="6"/>
    <!-- 
             Number of batteries in chassis.
            -->
    <add key="NumBatteries" value="6"/>
    <!-- 
             Number of power switches (aka AC sockets) in chassis.
            -->
    <add key="NumPowerSwitches" value="3"/>
    <!-- 
             Wait Time After AC Socket Power Off In Msecs (aka AC sockets) to prevent inconsistent hardware state, 
             especially when followed immediately by a ACSocket Power On command.
            -->
    <add key="WaitTimeAfterACSocketPowerOffInMsecs" value="1000"/>
    <!-- 
             Wait Time After Blade hard Power Off (SetPowerOff) In Msecs to prevent inconsistent hardware state, 
             especially when followed immediately by a Blade hard Power On (SetPowerOn) command.
            -->
    <add key="WaitTimeAfterBladeHardPowerOffInMsecs" value="100"/>

    <!-- 
             Number of Nics in Blades.
            -->
    <add key="NumNicsPerBlade" value="2"/>
    <!--
    Chassis Manager Trace log file path
    -->
    <add key="TraceLogFilePath" value="C:\\ChassisManagerTraceLog.svclog"/>
    <!--
    Chassis Manager Trace log file size (in KB)
    -->
    <add key="TraceLogFileSize" value="100000"/>
    <!--
    Chassis Manager User audit log file path
    -->
    <add key="UserLogFilePath" value="C:\\ChassisManagerUserLog.svclog"/>
    <!--
    Chassis Manager User audit log file size (in KB)
    -->
    <add key="UserLogFileSize" value="100000"/>
    <!--
    Chassis Manager User audit log maximum entries that can be requested by ReadChassisLog API
    -->
    <add key="UserLogMaxEntries" value="50" />
    <!--
    Ipmi System Event Log xml File
    -->
    <add key="EventLogXml" value="C:\\ChassisManager\\EventDataStrings.xml"/>
    <!--
    Maximum PWM value that can be set - now this is equal to 100
    -->
    <add key="MaxPWM" value="100"/>
    <!--
    Minimum PWM value that can be set - now this is equal to 100
    -->
    <add key="MinPWM" value="20"/>
    <!--
    Step PWM value that can be set - now this is equal to 10
    -->
    <add key="StepPWM" value="10"/>
    <!--
    Sensor number for pwm sensor (specific to each HW implementation)
    -->
    <add key="InputSensor" value="1"/>
    <!--
    Sensor number for inlet sensor (specific to each HW implementation)
    -->
    <add key="InletSensor" value="176"/>
    <!--
    Enales Inlet Temprature Offset value:
    1 = ODM/OEM specific Offset Enabled
    0 = ODM/OEM specific Offset Disabled
    -->
    <add key="EnableInletOffSet" value="1"/>
    <!--
    Sensor Low Threshold value (Warning - change this value only if using any other sensor other than PWM)
    -->
    <add key="SensorLowThreshold" value="0"/>
    <!--
    Sensor High Threshold value (Warning - change this value only if using any other sensor other than PWM)
    -->
    <add key="SensorHighThreshold" value="100"/>
    <!--
    ChassisManager Fan Altitude correction
    Correction Factor - 3.2% is determined from HW Spec 
    Altitude - total ft above sea level (default value is 0 - this should be edited during deployments)
    Warning! ! ! Incorrectly setting the altitude can increase fan speeds to less optimal levels
    -->
    <add key="AltitudeCorrectionFactor" value="0.032"/>
    <add key="Altitude" value="0"/>
    <!--
    Maximum number of retries allowed for initialization or timeouts
    -->
    <add key="MaxRetries" value="3"/>
    <!--
    High value that is required to set LED to high
    -->
    <add key="LEDHigh" value="255"/>
    <!--
    Value for maximum number of failures tolerated by state management before retrying initialization
    -->
    <add key="MaxFailCount" value="5"/>
    <!--
    Max work queue length of the port manager
    -->
    <add key="MaxPortManagerWorkQueueLength" value="20"/>
    <!--
    Min value for Blade Power Limit
    -->
    <add key="MinPowerLimit" value="120"/>
    <!--
    Max value for Blade Power Limit
    -->
    <add key="MaxPowerLimit" value="1000"/>
    <!--
    Correction time in milliseconds for SetPowerLimit
    -->
    <add key="SetPowerLimitCorrectionTimeInMilliseconds" value="6000"/>
    <!--
    Service timeout in minutes
    -->
    <add key="ServiceTimeoutInMinutes" value="2"/>
    <!--
    Max value for Serial console sessions. This is the
    maximum number of serial session to blades that
    can be open at any time from the CM
    -->
    <add key="MaxSerialConsoleSessions" value="12"/>
    <!--
    Max value for Serial Console Ports
    -->
    <add key="MaxSerialConsolePorts" value="4"/>
    <!--
    Multi Record Area Fru Manufacturer ID (IANA specification based)
    -->
    <add key="MultiRecordFruManufacturerId" value="311" />
    <!--
    Option whether to reset Multi Record Area Fru writes remaining to default value
    1 = reset writes remaining to default value
    0 = keep current number of writes remaining
    -->
    <add key="ResetMultiRecordFruWritesRemaining" value="0" />
    <!--
    Time for firmware to decompress
    -->
    <add key="FirmwareDecompressionTime" value="28" />
    <!--
    Serial port console client session inactivity timeout in multiple of seconds
    -->
    <add key="SerialPortConsoleClientSessionInactivityTimeoutInSecs" value="120"/>
    <!--
    Serial port console serial device communication response timeout in milliseconds 
    -->
    <add key="SerialPortConsoleDeviceCommunicationTimeoutInMsecs" value="100"/>
    <!--
    Blade serial session inactivity timeout in seconds
    -->
    <add key="BladeSerialTimeout" value="300" />
    <!--
    Blade Serial Session Power on wait interval in ms.  default = 5000
    -->
    <add key="SerialSessionPowerOnWait" value="5000"/>
    <!--
    Blade Serial Session Power On retry.  default = 10
    -->
    <add key="SerialSessionPowerOnRetry" value="10"/>
    <!--
    Port number where the service listens.
    Make sure the port do not have any firewall restrictions and not used by any other application.
    -->
    <add key="CmServicePortNumber" value="8000"/>
    <!--
    1 - if ssl encryption using certificates is enabled
    0 - if ssl encryption using certificates is disabled (communication content between client and CM will be sent in plain text)
    -->
    <add key="EnableSslEncryption" value="0"/>
    <!--
    Name of the SSL certificate (either self-signed/local or active-directory generated)
    The certificate has to be placed in local computer default certificate store
    -->
    <add key="SslCertificateName" value="CMServiceServer"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
    <!--
    1 - when chassis manager is to be configured in the presence of fan(s).
    0 - when chassis manager is to be cofigured assuming no fan(s) is present, for example, when WCS blades are deployed in a Container.
    -->
    <add key="EnableFan" value="1"/>
    <!--
    1 - Enable Battery Monitoring.
    0 - Disable Battery Monitoring.
    -->
    <add key="EnableBatteryMonitoring" value="0" />
    <!--
    1 - Enable Psu Alert signal Monitoring.
    0 - Disable Psu Alert signal Monitoring.
    -->
    <add key="EnablePsuAlertMonitoring" value="0" />
    <!--
    1 - Enable automatic removal of Default Power Capping based on PSU Alert.
    0 - Disable automatic removal of Default Power Capping based on PSU Alert.
    -->
    <add key="DpcAutoDeassert" value="0" />
    <!--
     PSU Alert polling interval in seconds.  Default is 3 seconds
    -->
    <add key="PsuAlertPollInterval" value="3" />
    <!--
     PSU polling interval in seconds.  Default is 10 seconds.
     Forced minimum of 10 seconds.
    -->
    <add key="PsuPollInterval" value="10" />
    <!--
    1 - Enable PSU Alert driven power cap APIs.
    0 - Disable PSU Alert driven power cap APIs.
    -->
    <add key="EnablePowerAlertDrivenPowerCapAPIs" value="0" />
    <!--
    1 - Enable Datasafe APIs.
    0 - Disable Datasafe APIs.
    -->
    <add key="EnableDatasafeAPIs" value="0" />
    <!--
    1 - Force CM to instantiate Emerson PSUs for unknown PSUs. Used to recover a PSU that has failed a FW update.
    0 - CM will instantiate all PSUs based on their model ID.
    -->
    <add key="ForceEmersonPsu" value="0" />
    <!--
     Number of NvDimms installed per blade
    -->
    <add key="NvDimmPerBlade" value="2" />
    <!--
     Allowed threshold for NvDimm State Transition failures
     Default = 3.  Minimum = 1
    -->
    <add key="NvDimmTriggerFailureCount" value="3" />
    <!--
        NvDimm Trigger Failure Action:
         0 = Nohting
         1 = Blade_EN Off.
         
        When the NvDimmTriggerFailureCount is exceeded,
        it is implied the BMC is unresponsive and the 
        Adr Trigger is not processing after NvDimmTriggerFailureCount
        number of retires.
        
        Default is no action
    -->
    <add key="NvDimmTriggerFailureAction" value="0" />
    <!--
      Delay between ADR_COMPLETE and blade power off (seconds).
      TODO: The default value needs to be set correctly.
    -->
    <add key="AdrCompleteDelay" value="5" />
    <!--
      NVDIMM Present Power-off Delay (seconds). 
      TODO: The default value needs to be set correctly.
    -->
    <add key="NvDimmPresentPowerOffDelay" value="160" />
    <!--
     Flag to enable the feature for processing critical battery status.
    -->
    <add key="ProcessBatteryStatus" value="0" />
    <!--
     Battery Charge level threshold
    -->
    <add key="BatteryChargeLevelThreshold" value="50" />
    <!--
     Battery discharge time in secs, after which NVDIMM backup is triggered.
     Note: 35 seconds is roughly the time for the diesel generators trying to start up twice.
    -->
    <add key="BatteryDischargeTimeInSecs" value="35" />
    <!--
     Thread Join Timeout on Dispose.
    -->
    <add key="JoinTimeout"  value="10" />
         </appSettings>
</configuration>
